openapi: 3.0.0
info:
  title: Job Portal API
  contact: {}
  version: '1.0'
servers:
- url: https://job-portal-api-80x5.onrender.com/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterUserRequest'
              - example:
                  name: amal
                  email: amal@gmail.com
                  password: amal123
            example:
              name: amal
              email: amal@gmail.com
              password: amal123
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginUserRequest'
              - example:
                  email: amal@gmail.com
                  password: amal123
            example:
              email: amal@gmail.com
              password: amal123
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    get:
      tags:
      - jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    post:
      tags:
      - jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateJobRequest'
              - example:
                  company: konka
                  position: lead ui designer
            example:
              company: konka
              position: lead ui designer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
      - jobs
      summary: Get single job
      operationId: Getsinglejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
      /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    patch:
      tags:
      - jobs
      summary: Update Jobs
      operationId: UpdateJobs
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateJobsRequest'
              - example:
                  company: konka
                  position: developer
            example:
              company: konka
              position: developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
      /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    delete:
      tags:
      - jobs
      summary: Delete job
      operationId: Deletejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: amal
        email: amal@gmail.com
        password: amal123
    LoginUserRequest:
      title: LoginUserRequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: amal@gmail.com
        password: amal123
    CreateJobRequest:
      title: CreateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: konka
        position: lead ui designer
    UpdateJobsRequest:
      title: UpdateJobsRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: konka
        position: developer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Misc
  description: ''
- name: auth
  description: ''
- name: jobs
  description: ''